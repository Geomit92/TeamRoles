@using Microsoft.AspNet.Identity;
@using TeamRoles.Models.Extensions;
@using TeamRoles.Models
@model TeamRoles.Models.CourseViewModel


<div class="container">
    <div class="row">
        <div class="col-md-4 col-lg-4">
            <div class="card">
                <img alt="Card image cap" id="testing" class="card-img-top img-fluid" img src="~/Users/@Model.Teacher.UserName/@Model.CourseName/@Url.Content(Model.CoursePic)"/>
                <div class="card-block">
                    <h4 class="card-title"> @Model.CourseName </h4>

                    <p class="card-text">
                    <p>@Model.CourseDescription</p>
                    <p>Teacher</p>
                    <p>@Model.Teacher.UserName</p>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 col-lg-4">
            <table class="table">
                <tr>
                    <th>
                        Students
                    </th>
                    @if (User.IsInRole("Teacher"))
                    {
                        <th>
                            Options
                        </th>
                    }
                </tr>
                @foreach (var item in Model.Courses)
                {
                    <tr>
                        @if (item.Enrollments.Count() != 0)
                        {
                            <td>
                                @Html.DisplayFor(modelItem => item.Enrollments.First().User.UserName)
                            </td>
                            if (User.IsInRole("Teacher"))
                            {
                                <td>
                                    @Html.ActionLink("Details", "Details", "Student", new { id = item.Enrollments.First().User.Id }, null) |
                                    @Html.ActionLink("Delete", "RemoveFromCourse", "Student", new { id = item.Enrollments.First().User.Id, coursename = Model.CourseName }, null)|
                                    @Html.ActionLink("Set Grade", "SetGrades", "Teacher", new { id = item.Enrollments.First().User.Id, coursename = Model.CourseName, teacherid = Model.Teacher.Id }, null)
                                </td>
                            }
                        }
                        else
                        {
                            <h4>There are no subscribed students!</h4>
                        }
                    </tr>
                }

            </table>
        </div>
        <div class="col-md-4 col-lg-4">
            @if (User.IsInRole("Teacher"))
            {

                @Html.ActionLink("Create Assignment", "CreateAssignment", "Assignments", new { coursename = Model.CourseName }, null)
                @Html.ActionLink("Create Lecture", "Create", "Lectures", new { courseid = Model.CourseId }, null)
                @Html.ActionLink("View Grades", "CourseGrades", "Courses", new { coursename = Model.CourseName, teacherid = Model.Teacher.Id }, null)

            }
            @Html.ActionLink("View Assignments", "ListAssignments", "Assignments", new { courseid = Model.CourseId }, null)
            @Html.ActionLink("View Lectures", "ListLectures", "Lectures", new { courseid = Model.CourseId }, null)
        </div>
        </div>
    </div>
    <a href="/Courses/Index">Back to List</a>

